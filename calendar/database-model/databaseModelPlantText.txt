@startuml
!define Table(name,desc) class name as "desc" << (T,#FFAAAA) >>
!define primary_key(x) <b>x</b>
!define unique(x) <color:green>x</color>
!define not_null(x) <u>x</u>
hide methods
hide stereotypes

Table(openings, "openings\n(contains the openings by servicepoints)") {
primary_key(id) UUID
not_null(unique(servicePointId)) UUID
not_null(unique(name)) STRING
not_null(startDate) DATE
not_null(endDate) DATE
}

Table(regularHours, "regularHours\n(contains a normal period\n one week for every period)"){
primary_key(id) UUID
not_null(openingId) UUID FK
not_null(day) ENUM
startTime STRING
endTime STRING
not_null(allDay) BOOL
not_null(isOpen) BOOL
}

Table(exceptions, "exceptions\n(contains an exceprional period\n one week for every period)"){
primary_key(id) UUID
not_null(openingId) UUID FK
not_null(day) ENUM
startTime STRING
endTime STRING
not_null(allDay) BOOL
not_null(isOpen) BOOL
}

Table(actualOpeningHours, "actualOpeningHours\n(contains the opening periods for every day)"){
primary_key(id) UUID
not_null(openingId) UUID FK
not_null(startDate) TIMESTAMP
not_null(endDate) TIMESTAMP
not_null(allDay) BOOL
not_null(isOpen) BOOL
}

Table(exceptionalHours, "exceptionalHours\n(contains the exception periods for every day)"){
primary_key(id) UUID
not_null(openingId) UUID FK
not_null(startDate) TIMESTAMP
not_null(endDate) TIMESTAMP
not_null(allDay) BOOL
not_null(isOpen) BOOL
}

openings "1" --> "0..N" regularHours : ""
openings "1" --> "0..N" exceptions : ""
openings "1" --> "0..N" actualOpeningHours : ""
openings "1" --> "0..N" exceptionalHours : ""
@enduml
